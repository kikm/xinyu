<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xinyu.dao.RoleDao">
	
	<resultMap id="BaseResultMap" type="com.xinyu.model.Role" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="cname" property="cname" jdbcType="VARCHAR" />
        <collection property="users" ofType="com.xinyu.model.User">
            <result column="uname" property="name"/>
        </collection>
        <collection property="menus" ofType="com.xinyu.model.Menu">
            <result column="mid" property="id"/>
        </collection>
    </resultMap>
    
	<select id="getAllRole" resultMap="BaseResultMap">
        select t.*
        from t_role t
        <if test="name != null">
        	where t.cname like '%${name}%'
        </if>
    </select>
    
    <select id="getCountRoleCriteriaQuery" resultType="java.lang.Integer">
        select count(distinct d.id) from t_role d
        <if test="d !=null and d.cname != null">
        	where d.cname like '%${d.cname}%'
        </if>
    </select>
    
    <select id="getRoleList" resultMap="BaseResultMap">
    	select t.*,u.user_name uname from (
    		select d.* from t_role d
        	<if test="d !=null and d.cname != null">
        		where d.cname like '%${d.cname}%'
        	</if>
    		order by d.cname
    		limit #{page.start},#{page.end}
    	) AS t
    	left join t_role_user ru on ru.role_id=t.id
    	left join t_user u on ru.user_id=u.id
    </select>
    
    <select id="getRoleById" resultMap="BaseResultMap">
    	select t.*,rm.menu_id mid from t_role t
    	left join t_role_menu rm on rm.role_id=t.id
    	where t.id=#{id}
    </select>
    
    
    <update id="updateRole">
    	update t_role set cname = #{d.cname} where id=#{d.id}
    </update>
    
    
    <delete id="deleteRoleMenu">
		delete from t_role_menu where role_id = #{id} 
	</delete>
    
    <insert id="saveRoleMenu">
    	<foreach collection="list" index="index" item="item" separator=";">
			insert into t_role_menu  
			<trim prefix="(" suffix=")" suffixOverrides="," >  
				<if test="id != null ">role_id,</if>
				<if test="item != null ">menu_id</if>  
			</trim>  
			<trim prefix="values (" suffix=")" suffixOverrides="," >  
				<if test="id != null ">#{id},</if> 
				<if test="item != null ">#{item}</if> 
			</trim>
		</foreach>
    </insert>
    
    
  

    
</mapper>